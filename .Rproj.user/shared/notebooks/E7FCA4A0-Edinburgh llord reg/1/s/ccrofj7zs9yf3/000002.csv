"0","# open postcode directory - gives some errors which we ignore for now"
"0","# NB that to fit onto GitHub, have had to cut down to EH pcodes only but left"
"0","#    code unchanged so assumes it is whole of Scotland"
"0","df_pcode <- read_csv("
"0","  ""data/Scottish_Postcode_Directory_2017_2 (EH).csv"","
"0","  col_types = cols("
"0","      pc7 = col_character(),"
"0","      pc8 = col_character(),"
"0","      Grid_Reference_Easting = col_double(),"
"0","      Grid_Reference_Northing = col_double(),"
"0","      Latitude = col_double(),"
"0","      Longitude = col_double(),"
"0","      DataZone2011 = col_character(),"
"0","      HHC2011 = col_double(),"
"0","      Pop2011 = col_double(),"
"0","      HHC2001 = col_double(),"
"0","      Pop2001 = col_double()"
"0","  )"
"0",")"
"0","# cut df_pcodes to ""EH"""" and only the vars we need to attach to foi data"
"0","df_pcode2 <- subset(df_pcode, str_sub(pc7, 1, 2) == ""EH"","
"0","                   select = c(pc7, pc8, DataZone2011, LAU_Level1_2011"
"0","                   )"
"0",")"
"0","# add data from df_pcode2 to df_foi"
"0","df_foi <- df_foi %>%"
"0","  left_join(df_pcode2, by = ""pc8"")"
"0","# check how many cases have missing values - for pc7 it is 18 "
"0","sum(is.na(df_foi$pc7))"
"1","[1]"
"1"," 18"
"1","
"
"0","# check number of rows and valid cases in all cols"
"0","# NB there is some drop off in HHC and Pop figs, esp. for 2001"
"0","nrow(df_foi)"
"1","[1]"
"1"," 7262"
"1","
"
"0","colSums(!is.na(df_foi))"
"1","                ID "
"1","  PropertyPostcode "
"1","NumberOfProperties "
"1","               pc8 "
"1","               pc7 "
"1","
"
"1","              7262 "
"1","              7262 "
"1","              7262 "
"1","              7262 "
"1","              7244 "
"1","
"
"1","      DataZone2011 "
"1","   LAU_Level1_2011 "
"1","
"
"1","              7244 "
"1","              7244 "
"1","
"
"0","# aggregate foi data to DZ level, summing number of registered props"
"0","df_foi_dz <- df_foi %>%"
"0","  group_by(DataZone2011) %>%"
"0","  summarise("
"0","    NumberOfProperties = sum(NumberOfProperties, na.rm = TRUE)"
"0","    )"
"0","# second cut of df_pcode to those in Edinburgh in order to make list of DZs in city "
"0","df_pcode3 <- subset(df_pcode, LAU_Level1_2011 == ""S30000008"","
"0","                   select = c(DataZone2011"
"0","                   )"
"0",")"
"0","# collapse so it is just a list of DZs in Edinburgh"
"0","df_dz_Edin <- df_pcode3 %>%"
"0","  group_by(DataZone2011) %>%"
"0","  summarise()"
"0","# also extract as list"
"0","dz_Edin <- (df_dz_Edin$DataZone2011)"
"0","# Open census data file with tenure composition for DZs in 2011"
"0","df_census <- as_tibble(read_csv(""data/tenure DZ2011.csv""))"
"0","# make correct PRS and PRSPct figures"
"0","df_census <- mutate(df_census, "
"0","                    PRS = PrtRent_2011, "
"0","                    PRSPct = PrtRent_2011/All_HH_2011)"
"0","# reduce to DZs in Edinburgh using the list - dz_Edin"
"0","df_census <- df_census[df_census$DataZone %in% dz_Edin,]"
"0","# rename 'Datazone' as 'Datazone2011' for matching"
"0","colnames(df_census)[1] <- ""DataZone2011"""
"0","# merge census tenure and foi data on to the Edinburgh Datazones file. "
"0","df_dz_Edin <- df_dz_Edin %>%"
"0","  left_join(df_census, by = ""DataZone2011"")"
"0","df_dz_Edin <- df_dz_Edin %>%"
"0","  left_join(df_foi_dz, by = ""DataZone2011"")"
"0","# check number of DZ and number with registered properties"
"0","nrow(df_dz_Edin)"
"1","[1]"
"1"," 597"
"1","
"
"0","sum(is.na(df_dz_Edin$NumberOfProperties))"
"1","[1]"
"1"," 1"
"1","
"
"0","# where reg props missing for any DZ, set to zero"
"0","df_dz_Edin$NumberOfProperties["
"0","  is.na(df_dz_Edin$NumberOfProperties)"
"0","  ] <- 0"
